/*대시보드 쿼리 수정 본 - 구)대시보드  2022_v1 */

/*1-1. 피크 전력 - 변동없음 */
    SELECT OBJ_MM    /* 요금적용전력 기준월 */
        , PEAK_VAL AS PEAK_VAL    /* 요금적용전력 값 */
        , CUR_DATE      /* 현재시간 */
        , IFNULL(CUR_PEAK_VAL,0) AS CUR_PEAK_VAL  /* 현재피크전력 */ 
        , IFNULL(CASE WHEN PEAK_VAL = 0.0 THEN 0 ELSE CUR_PEAK_VAL / PEAK_VAL END * 100,0) AS PEAK_RTO
        , CASE  WHEN CUR_PEAK_VAL / PEAK_VAL * 100  < 70 THEN '정상' 
                WHEN CUR_PEAK_VAL / PEAK_VAL * 100 >=  70 AND CUR_PEAK_VAL / PEAK_VAL * 100 > 90  THEN '주의'
                WHEN CUR_PEAK_VAL IS NULL OR PEAK_VAL IS NULL THEN '-'
          ELSE '위험' END PEAK_STAT 
    FROM (
            select
                date_format(NOW(), '%Y%m') as OBJ_MM ,
                I.ERC_ID ,
                I.READ_PLC_ID ,
                IFNULL(I.PEAK_POW, C.PEAK_POW) as PEAK_VAL ,
                R.TOT_DTTM as CUR_DATE ,
                R.TOT_VAL as CUR_PEAK_VAL ,
                row_number() over(partition by C.COM_ID,		C.BLOC_ID,		C.ERC_ID	order by		C.OBJ_MM desc,		R.TOT_DTTM desc) as RN
            from
                EMS_ERC_INFO I
            inner join EMS_READ_OBJ_INFO O on		I.COM_ID = O.COM_ID		and I.READ_OBJ_ID = O.READ_OBJ_ID
            left join ems_read_plc_tag_rel P on P.COM_ID=I.COM_ID and I.READ_PLC_ID =P.READ_PLC_ID 
            left join ems_tag_info T on P.COM_ID =T.COM_ID  and P.TAG_ID =T.TAG_ID  and T.PEAK_FG='1'
            left join ems_tag_tot_info R on R.COM_ID=P.COM_ID and R.TAG_ID=P.TAG_ID  and date_format(R.TOT_DTTM, '%Y%m%d') = date_format(NOW(), '%Y%m%d')  and R.TOT_VAL  > 0
            left join EMS_ENRG_CHRG_INFO C on		I.COM_ID = C.COM_ID		and I.ERC_ID = C.ERC_ID		and C.BLOC_ID =#{session.blocId} and date_format(C.OBJ_MM, '%Y%m') = date_format(NOW(), '%Y%m')
            where
                I.COM_ID = #{session.comId}	/*파라미터*/
                and I.BLOC_ID =#{session.blocId}	/*파라미터*/
                and I.CHRG_KIND ='PEAK'
                and I.use_FG='1'
    ) T
     LIMIT 1
     ;
    
    
    /*1-2 누적사용량 (전력) - 220726-쿼리수정*/
    SELECT
        IFNULL(GROUP_CONCAT(if(DIVSION = 'USE_QTY', QTY, NULL)), 0) AS 'USE_QTY', 
        IFNULL(GROUP_CONCAT(if(DIVSION = 'CUR_USE_QTY', QTY, NULL)), 0) AS 'CUR_USE_QTY', 
        IFNULL(GROUP_CONCAT(if(DIVSION = 'PAST_USE_QTY', QTY, NULL)), 0) AS 'PAST_USE_QTY'
    FROM
    (
    	SELECT 
    	'USE_QTY' AS DIVSION, ROUND(SUM(IFNULL(T.TOT_VAL,0)),0) AS QTY
		FROM
		EMS_ERC_INFO R 
		INNER JOIN EMS_READ_PLC_MM_TOT_INFO T  ON R.COM_ID=T.COM_ID  AND R.READ_PLC_ID =T.READ_PLC_ID  
		WHERE R.COM_ID =#{session.comId}/*파라미터*/
		AND R.BLOC_ID =#{session.blocId}/*파라미터*/
		AND R.CHRG_KIND ='PEAK'
		and R.USE_FG ='1'
		AND SUBSTRING(T.TOT_MM,1,4) =YEAR(NOW())
      
        UNION ALL

        SELECT 
    	'CUR_USE_QTY' AS DIVSION, ROUND(SUM(IFNULL(T.TOT_VAL,0)),0) AS QTY
		FROM
		EMS_ERC_INFO R 
		INNER JOIN EMS_READ_PLC_MM_TOT_INFO T  ON R.COM_ID=T.COM_ID  AND R.READ_PLC_ID =T.READ_PLC_ID  
		WHERE R.COM_ID =#{session.comId}/*파라미터*/
		AND R.BLOC_ID =#{session.blocId}/*파라미터*/
		AND R.CHRG_KIND ='PEAK'
		and R.USE_FG ='1'
		AND T.TOT_MM = CONCAT(YEAR(NOW()),LPAD(MONTH(NOW()),2, 0))
		
        UNION ALL
        
        SELECT 
    	'PAST_USE_QTY' as DIVSION, ROUND(SUM(IFNULL(T.TOT_VAL,0)),0) as QTY
		FROM
		EMS_ERC_INFO R 
		INNER JOIN EMS_READ_PLC_TOT_INFO T  ON R.COM_ID=T.COM_ID  AND R.READ_PLC_ID =T.READ_PLC_ID  
		WHERE R.COM_ID =#{session.comId}/*파라미터*/
		AND R.BLOC_ID =#{session.blocId}/*파라미터*/
		AND R.CHRG_KIND ='PEAK'
		and R.USE_FG ='1'
		AND T.TOT_DTTM between STR_TO_DATE(concat( date_format(date_add(NOW(), interval -1 MONTH), '%Y%m'), '01000000'), '%Y%m%d%H%i%s') and date_add(NOW(), interval -1 MONTH)
		
    )T
    
    ;
   
    /*1-3 온실가스 누적배출량*/
    SELECT
	    IFNULL(GROUP_CONCAT(if(DIVSION = 'USE_VAL', QTY, NULL)), 0) AS 'USE_VAL', 
	    IFNULL(GROUP_CONCAT(if(DIVSION = 'CUR_CVRT_YEAR', QTY, NULL)), 0) AS 'CUR_CVRT_YEAR', 
	    IFNULL(GROUP_CONCAT(if(DIVSION = 'CUR_CVRT_MONTH', QTY, NULL)) , 0)AS 'CUR_CVRT_MONTH', 
	    IFNULL( GROUP_CONCAT(if(DIVSION = 'PAST_CVRT_MONTH', QTY, NULL)), 0) AS 'PAST_CVRT_MONTH'
    FROM
    (
    	SELECT 
    	'USE_VAL' AS DIVSION, SUM(IFNULL(T.TOT_VAL,0)) AS QTY
		FROM
		EMS_ERC_INFO R 
		INNER JOIN EMS_READ_PLC_MM_TOT_INFO T  ON R.COM_ID=T.COM_ID  AND R.READ_PLC_ID =T.READ_PLC_ID  
		WHERE R.COM_ID =#{session.comId}/*파라미터*/
		AND R.BLOC_ID =#{session.blocId}/*파라미터*/
		AND R.CHRG_KIND ='PEAK'
		and R.USE_FG ='1'
		AND SUBSTRING(T.TOT_MM,1,4) =YEAR(NOW())
        
        union all
        
	   	SELECT 'CUR_CVRT_YEAR' as DIVSION, SUM(IFNULL(T.TOT_VAL,0)) * IFNULL(O.TOE_CVRT_COEF,0) as QTY
		FROM
		EMS_ERC_INFO R 
		INNER JOIN EMS_READ_PLC_MM_TOT_INFO T  ON R.COM_ID=T.COM_ID  AND R.READ_PLC_ID =T.READ_PLC_ID  
		LEFT JOIN EMS_READ_OBJ_INFO O ON R.COM_ID =O.COM_ID  AND R.READ_OBJ_ID =O.READ_OBJ_ID 
		WHERE R.COM_ID =#{session.comId}/*파라미터*/
		AND R.BLOC_ID =#{session.blocId}/*파라미터*/
		AND R.CHRG_KIND ='PEAK'
		and R.USE_FG ='1'
		AND SUBSTRING(T.TOT_MM,1,4) =YEAR(NOW())
        
        union all
        
        SELECT 'CUR_CVRT_MONTH' as DIVSION, SUM(IFNULL(T.TOT_VAL,0)) * IFNULL(O.TOE_CVRT_COEF,0) as QTY
		FROM
		EMS_ERC_INFO R 
		INNER JOIN EMS_READ_PLC_MM_TOT_INFO T  ON R.COM_ID=T.COM_ID  AND R.READ_PLC_ID =T.READ_PLC_ID  
		LEFT JOIN EMS_READ_OBJ_INFO O ON R.COM_ID =O.COM_ID  AND R.READ_OBJ_ID =O.READ_OBJ_ID 
		WHERE R.COM_ID =#{session.comId}/*파라미터*/
		AND R.BLOC_ID =#{session.blocId}/*파라미터*/
		AND R.CHRG_KIND ='PEAK'
		and R.USE_FG ='1'
		AND T.TOT_MM = CONCAT(YEAR(NOW()),LPAD(MONTH(NOW()),2, 0))
		
        union all
        
        SELECT 'PAST_CVRT_MONTH' as DIVSION,	SUM(IFNULL(T.TOT_VAL, 0)) * IFNULL(O.TOE_CVRT_COEF, 0) as QTY
		FROM
		EMS_ERC_INFO R 
		INNER JOIN EMS_READ_PLC_TOT_INFO T  ON R.COM_ID=T.COM_ID  AND R.READ_PLC_ID =T.READ_PLC_ID  
		LEFT JOIN EMS_READ_OBJ_INFO O ON R.COM_ID =O.COM_ID  AND R.READ_OBJ_ID =O.READ_OBJ_ID 
		WHERE R.COM_ID =#{session.comId}/*파라미터*/
		AND R.BLOC_ID =#{session.blocId}/*파라미터*/
		AND R.CHRG_KIND ='PEAK'
		and R.USE_FG ='1'
		AND T.TOT_DTTM between STR_TO_DATE(concat( date_format(date_add(NOW(), interval -1 MONTH), '%Y%m'), '01000000'), '%Y%m%d%H%i%s') and date_add(NOW(), interval -1 MONTH)
 )T
    ;
 
	/* 전체 검침개소 */
	SELECT COUNT(*) AS CNT 
    FROM EMS_READ_PLC_BASE_INFO 
    WHERE COM_ID = #{session.comId}/*파라미터*/
    AND BLOC_ID =#{session.blocId}/*파라미터*/
    AND PLC_KIND ='CHK_MSR' 
    AND USE_FG ='1'
    ;
 
    /*미사용개소 - 3초 소요 ㅠ */
  	SELECT 	P.COM_ID ,
			    P.READ_PLC_ID ,
		        P.READ_PLC_NM ,
		        T.READ_OBJ_ID ,
		        O.READ_OBJ_NM , 
		        SUM(T.TOT_VAL) TOT_VAL
	    FROM EMS_READ_PLC_BASE_INFO P
	    INNER JOIN EMS_READ_OBJ_INFO O ON  P.COM_ID=O.COM_ID AND P.READ_OBJ_ID=O.READ_OBJ_ID AND O.GRP_CD='MTT_ENRG'
	    INNER JOIN EMS_READ_PLC_TOT_INFO  T ON P.COM_ID =T.COM_ID  AND P.READ_PLC_ID =T.READ_PLC_ID AND P.READ_OBJ_ID=T.READ_OBJ_ID
	    	AND  T.TOT_DTTM BETWEEN  CURDATE()  AND NOW()
	     	AND T.TOT_VAL = 0
	    WHERE  P.COM_ID = #{session.comId}/*파라미터*/
	    AND P.BLOC_ID =  #{session.blocId}/*파라미터*/
	    AND P.PLC_KIND ='CHK_MSR' 
	    AND P.USE_FG ='1'
	    GROUP BY P.READ_OBJ_ID , P.READ_PLC_ID
	    HAVING SUM(T.TOT_VAL) = 0 
	
 		/* 비정상개소 - 최근 1시간 동안 전압에 변화가 없는 경우 비정상*/
    SELECT 
    	COM_ID, 
    	SF_GET_NM(COM_ID, BLOC_ID) AS BLOC_NM,
    	SF_GET_NM(COM_ID, READ_PLC_ID) AS READ_PLC_NM,
    	SF_GET_NM(COM_ID, READ_OBJ_ID) AS READ_OBJ_NM,
    	SUM(READ_VAL-IFNULL(PREV,READ_VAL)) USE_VAL
    FROM (
	    SELECT P.COM_ID, P.READ_PLC_ID , R.TAG_ID, O.READ_OBJ_CD , D.READ_DTTM  , D.READ_VAL  , P.READ_OBJ_ID ,P.BLOC_ID,
		    LAG(D.READ_VAL, 1) OVER (PARTITION BY D.COM_ID, D.TAG_ID, DATE_FORMAT(D.READ_DTTM,'%Y%M%D') ORDER BY DATE_FORMAT(D.READ_DTTM,'%H:%I')) AS PREV
	    FROM EMS_READ_PLC_INFO  P
	    INNER JOIN EMS_READ_PLC_TAG_REL R ON P.COM_ID=R.COM_ID AND P.READ_PLC_ID =R.READ_PLC_ID 
	    INNER JOIN EMS_TAG_INFO T ON R.COM_ID =T.COM_ID  AND R.TAG_ID =T.TAG_ID
	    INNER JOIN EMS_READ_OBJ_INFO O2 ON  T.COM_ID=O2.COM_ID AND P.READ_OBJ_ID=O2.READ_OBJ_ID AND O2.GRP_CD='MTT_ENRG'
	    INNER JOIN EMS_READ_OBJ_INFO O ON  T.COM_ID=O.COM_ID AND T.READ_OBJ_ID=O.READ_OBJ_ID AND O.READ_OBJ_CD ='VOLT_R' /*통신판단여부컬럼으로 변경 필요*/
	    INNER JOIN EMS_TAG_READ_RAW_DATA D ON T.COM_ID =D.COM_ID  AND T.TAG_ID =D.TAG_ID  
	    	AND D.READ_DTTM BETWEEN DATE_SUB(NOW(), INTERVAL 1 HOUR) AND NOW()
	    WHERE P.COM_ID=#{session.comId} /*파라미터*/
	    	AND P.BLOC_ID=#{session.blocId} /*파라미터*/
	    	and P.USE_FG='1'
    ) A 
    GROUP BY COM_ID, READ_PLC_ID, TAG_ID, READ_OBJ_ID , BLOC_ID
    HAVING SUM(READ_VAL-IFNULL(PREV,READ_VAL))=0
    
	  /* 금일 사용량, 금일 비용 */
    SELECT 
        P.COM_ID,
        SUM(D.TOT_VAL) QTY,
        SUM(D.TOT_COST_VAL)/1000 COST
    FROM EMS_ERC_INFO P 
    INNER JOIN EMS_READ_OBJ_INFO O ON  P.COM_ID=O.COM_ID AND P.READ_OBJ_ID=O.READ_OBJ_ID AND O.USE_FG ='1'
    LEFT JOIN EMS_READ_PLC_TOT_INFO D  ON P.COM_ID=D.COM_ID AND P.READ_PLC_ID =D.READ_PLC_ID AND D.TOT_DTTM BETWEEN  CURDATE()  AND NOW()
    WHERE 
    	P.COM_ID = #{session.comId} /*파라미터*/
    	AND P.BLOC_ID =#{session.blocId}  /*파라미터*/
		AND P.CHRG_KIND  ='PEAK'
    	AND P.USE_FG ='1'
    GROUP BY P.COM_ID
    

/* 지난주 평일 사용량/비용 평균  */
     SELECT 
            COM_ID, 
            AVG(QTY) QTY_AVG , 
            AVG(COST)/1000 COST_AVG,
            MAX(QTY) MAX_QTY , 
            MAX(COST)/1000 MAX_COST
    FROM (
        SELECT 
        P.COM_ID, SUM(D.TOT_VAL) QTY, SUM(D.TOT_COST_VAL) COST
        FROM EMS_ERC_INFO P 
        INNER JOIN EMS_READ_OBJ_INFO O ON  P.COM_ID=O.COM_ID AND P.READ_OBJ_ID=O.READ_OBJ_ID  AND O.USE_FG ='1'
        LEFT JOIN EMS_READ_PLC_TOT_INFO D ON P.COM_ID=D.COM_ID AND P.READ_PLC_ID=D.READ_PLC_ID
 -- 				AND D.TOT_DTTM BETWEEN 	CURDATE()  AND NOW()
            AND HOUR(D.TOT_DTTM)  <![CDATA[ <= ]]>  HOUR(NOW())
            AND D.TOT_DTTM BETWEEN STR_TO_DATE(CONCAT(DATE_SUB(CURDATE(), INTERVAL (WEEKDAY(CURDATE()) + 7) DAY), ' 000000'), '%Y-%m-%d %H%i%s')
            AND STR_TO_DATE(CONCAT(DATE_SUB(CURDATE(), INTERVAL (WEEKDAY(CURDATE()) + 3) DAY), ' 235959'), '%Y-%m-%d %H%i%s')
            AND HOUR(D.TOT_DTTM)  <![CDATA[ <= ]]>  HOUR(NOW())
        WHERE 
	    	P.COM_ID = #{session.comId} /*파라미터*/
	    	AND P.BLOC_ID =#{session.blocId}  /*파라미터*/
	    	AND P.CHRG_KIND  ='PEAK'
			AND P.USE_FG ='1'
        GROUP BY P.COM_ID, date_format(D.TOT_DTTM, '%Y%m%d') 
    ) A
    GROUP BY COM_ID
    
    /*외기온도*/
  	SELECT 
		  DATE_FORMAT(D.TOT_DTTM,'%Y%m%d') AS READ_DT
		, FORMAT(AVG(IFNULL(D.TOT_VAL,0)), 1) AS VAL   
	FROM EMS_READ_OBJ_INFO M 
		INNER JOIN EMS_READ_PLC_INFO R ON M.COM_ID=R.COM_ID AND M.READ_OBJ_ID =R.READ_OBJ_ID AND WTHR_FG='1' /*기상정보*/
		INNER JOIN EMS_READ_PLC_TOT_INFO D ON R.COM_ID=D.COM_ID AND R.READ_PLC_ID=D.READ_PLC_ID
	WHERE M.COM_ID = 'GIMTC' /*파라미터*/
		AND R.BLOC_ID = #{session.blocId}	/*파라미터*/
		AND M.READ_OBJ_CD = 'TEMP' 
		AND D.TOT_DTTM BETWEEN DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 HOUR),'%Y-%m-%d %H:00') AND DATE_FORMAT(NOW(),'%Y-%m-%d %H:00')
	GROUP BY DATE_FORMAT(D.TOT_DTTM,'%Y%m%d')
		
/*에너지 사용현황 - 금일*/
 	WITH TMP AS (
    		SELECT
                P.COM_ID,
                DATE_FORMAT(D.TOT_DTTM,'%Y%m%d') as TOT_DTTM,
                LPAD(HOUR(D.TOT_DTTM),2, 0) AS TM,
                P.READ_OBJ_ID,
                SUM(D.TOT_VAL) AS TOT_VAL,
                SF_GET_READ_OBJ_UNIT(P.COM_ID, P.READ_OBJ_ID) AS READ_OBJ_UNIT,
                CASE WHEN DATE_FORMAT(D.TOT_DTTM,'%Y%m%d') = DATE_FORMAT(NOW(),'%Y%m%d') THEN 'TODAY' else 'LAST' END FLAG
			FROM EMS_ERC_INFO P 
		    INNER JOIN EMS_READ_OBJ_INFO O ON  P.COM_ID=O.COM_ID AND P.READ_OBJ_ID=O.READ_OBJ_ID
		    LEFT JOIN EMS_READ_PLC_TOT_INFO D  ON P.COM_ID=D.COM_ID AND P.READ_PLC_ID =D.READ_PLC_ID
		      AND D.TOT_DTTM BETWEEN  DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 DAY),'%Y-%m-%d 00:00:00') AND NOW()
    	    WHERE 
		    	P.COM_ID = #{session.comId} /*파라미터*/
		    	AND P.BLOC_ID =#{session.blocId}  /*파라미터*/
				AND P.USE_FG ='1'
				AND P.CHRG_KIND  ='PEAK'
            GROUP by  P.COM_ID,  DATE_FORMAT(D.TOT_DTTM,'%Y%m%d'),  LPAD(HOUR(D.TOT_DTTM),2, 0),    P.READ_OBJ_ID
   )
	SELECT         
        '전일 사용량' AS TYPE,
        COM_ID,
        TOT_DTTM,
        READ_OBJ_ID,
        READ_OBJ_UNIT,
        GROUP_CONCAT(if(TM = '00', TOT_VAL, NULL)) AS 'QTY_00',        GROUP_CONCAT(if(TM = '01', TOT_VAL, NULL)) AS 'QTY_01',
        GROUP_CONCAT(if(TM = '02', TOT_VAL, NULL)) AS 'QTY_02',        GROUP_CONCAT(if(TM = '03', TOT_VAL, NULL)) AS 'QTY_03',
        GROUP_CONCAT(if(TM = '04', TOT_VAL, NULL)) AS 'QTY_04',        GROUP_CONCAT(if(TM = '05', TOT_VAL, NULL)) AS 'QTY_05',
        GROUP_CONCAT(if(TM = '06', TOT_VAL, NULL)) AS 'QTY_06',        GROUP_CONCAT(if(TM = '07', TOT_VAL, NULL)) AS 'QTY_07',
        GROUP_CONCAT(if(TM = '08', TOT_VAL, NULL)) AS 'QTY_08',        GROUP_CONCAT(if(TM = '09', TOT_VAL, NULL)) AS 'QTY_09',
        GROUP_CONCAT(if(TM = '10', TOT_VAL, NULL)) AS 'QTY_10',        GROUP_CONCAT(if(TM = '11', TOT_VAL, NULL)) AS 'QTY_11',
        GROUP_CONCAT(if(TM = '12', TOT_VAL, NULL)) AS 'QTY_12',        GROUP_CONCAT(if(TM = '13', TOT_VAL, NULL)) AS 'QTY_13',
        GROUP_CONCAT(if(TM = '14', TOT_VAL, NULL)) AS 'QTY_14',        GROUP_CONCAT(if(TM = '15', TOT_VAL, NULL)) AS 'QTY_15',
        GROUP_CONCAT(if(TM = '16', TOT_VAL, NULL)) AS 'QTY_16',        GROUP_CONCAT(if(TM = '17', TOT_VAL, NULL)) AS 'QTY_17',
        GROUP_CONCAT(if(TM = '18', TOT_VAL, NULL)) AS 'QTY_18',        GROUP_CONCAT(if(TM = '19', TOT_VAL, NULL)) AS 'QTY_19',
        GROUP_CONCAT(if(TM = '20', TOT_VAL, NULL)) AS 'QTY_20',        GROUP_CONCAT(if(TM = '21', TOT_VAL, NULL)) AS 'QTY_21',
        GROUP_CONCAT(if(TM = '22', TOT_VAL, NULL)) AS 'QTY_22',        GROUP_CONCAT(if(TM = '23', TOT_VAL, NULL)) AS 'QTY_23'
    FROM TMP 
    WHERE FLAG='LAST'       
    UNION ALL
	SELECT         
        '금일 사용량' AS TYPE,
        COM_ID,
        TOT_DTTM,
        READ_OBJ_ID,
        READ_OBJ_UNIT,
        GROUP_CONCAT(if(TM = '00', TOT_VAL, NULL)) AS 'QTY_00',        GROUP_CONCAT(if(TM = '01', TOT_VAL, NULL)) AS 'QTY_01',
        GROUP_CONCAT(if(TM = '02', TOT_VAL, NULL)) AS 'QTY_02',        GROUP_CONCAT(if(TM = '03', TOT_VAL, NULL)) AS 'QTY_03',
        GROUP_CONCAT(if(TM = '04', TOT_VAL, NULL)) AS 'QTY_04',        GROUP_CONCAT(if(TM = '05', TOT_VAL, NULL)) AS 'QTY_05',
        GROUP_CONCAT(if(TM = '06', TOT_VAL, NULL)) AS 'QTY_06',        GROUP_CONCAT(if(TM = '07', TOT_VAL, NULL)) AS 'QTY_07',
        GROUP_CONCAT(if(TM = '08', TOT_VAL, NULL)) AS 'QTY_08',        GROUP_CONCAT(if(TM = '09', TOT_VAL, NULL)) AS 'QTY_09',
        GROUP_CONCAT(if(TM = '10', TOT_VAL, NULL)) AS 'QTY_10',        GROUP_CONCAT(if(TM = '11', TOT_VAL, NULL)) AS 'QTY_11',
        GROUP_CONCAT(if(TM = '12', TOT_VAL, NULL)) AS 'QTY_12',        GROUP_CONCAT(if(TM = '13', TOT_VAL, NULL)) AS 'QTY_13',
        GROUP_CONCAT(if(TM = '14', TOT_VAL, NULL)) AS 'QTY_14',        GROUP_CONCAT(if(TM = '15', TOT_VAL, NULL)) AS 'QTY_15',
        GROUP_CONCAT(if(TM = '16', TOT_VAL, NULL)) AS 'QTY_16',        GROUP_CONCAT(if(TM = '17', TOT_VAL, NULL)) AS 'QTY_17',
        GROUP_CONCAT(if(TM = '18', TOT_VAL, NULL)) AS 'QTY_18',        GROUP_CONCAT(if(TM = '19', TOT_VAL, NULL)) AS 'QTY_19',
        GROUP_CONCAT(if(TM = '20', TOT_VAL, NULL)) AS 'QTY_20',        GROUP_CONCAT(if(TM = '21', TOT_VAL, NULL)) AS 'QTY_21',
        GROUP_CONCAT(if(TM = '22', TOT_VAL, NULL)) AS 'QTY_22',        GROUP_CONCAT(if(TM = '23', TOT_VAL, NULL)) AS 'QTY_23'
    FROM TMP 
    WHERE FLAG='TODAY' 

/*전력품질*/
SELECT 
	COM_ID, READ_PLC_ID, READ_PLC_NM, READ_DT, READ_TM,
	AVG(CASE WHEN READ_OBJ_CD = 'ACTV_PWR' THEN READ_VAL END) AS INSTANT_VAL,
    AVG(CASE WHEN READ_OBJ_CD = 'VOLT_AVG' OR READ_OBJ_CD = 'VOLT_R' THEN READ_VAL END) AS R_VOLT,
    AVG(CASE WHEN READ_OBJ_CD = 'AMP_AVG' OR READ_OBJ_CD = 'AMP_R' THEN READ_VAL END) AS R_AMPR,
    AVG(CASE WHEN READ_OBJ_CD = 'HZ' THEN READ_VAL END) AS FREQ,
    AVG(CASE WHEN READ_OBJ_CD = 'PF' THEN READ_VAL END) AS POW_FACT,
    MAX(CASE WHEN READ_OBJ_CD = 'ACTV_PWR' THEN UNIT_NM END) AS INSTANT_VAL_UNIT,
    MAX(CASE WHEN READ_OBJ_CD = 'VOLT_AVG' OR READ_OBJ_CD = 'VOLT_R' THEN UNIT_NM END) AS R_VOLT_UNIT,
    MAX(CASE WHEN READ_OBJ_CD = 'AMP_AVG' OR READ_OBJ_CD = 'AMP_R' THEN UNIT_NM END) AS R_AMPR_UNIT,
    MAX(CASE WHEN READ_OBJ_CD = 'HZ' THEN UNIT_NM END) AS FREQ_UNIT,
    MAX(CASE WHEN READ_OBJ_CD = 'PF' THEN UNIT_NM END) AS POW_FACT_UNIT
FROM 
(
	SELECT A.COM_ID
		, T.READ_PLC_ID
		, R.READ_PLC_NM
		, T.TAG_ID
		, A.READ_DTTM AS READ_DTTM
		, DATE_FORMAT(A.READ_DTTM,'%Y%m%d') as READ_DT
		, DATE_FORMAT(A.READ_DTTM,'%H%i') as READ_TM
		, I.READ_OBJ_CD
		, A.READ_VAL 
		, CC.COMM_CD_NM AS UNIT_NM
	FROM EMS_READ_PLC_INFO R
	INNER JOIN EMS_READ_PLC_TAG_REL T	ON R.COM_ID = T.COM_ID AND R.READ_PLC_ID =T.READ_PLC_ID
	INNER JOIN EMS_TAG_BASE_INFO B      ON T.COM_ID = B.COM_ID AND T.TAG_ID = B.TAG_ID
	INNER JOIN EMS_READ_OBJ_INFO I 		ON I.COM_ID = B.COM_ID AND I.READ_OBJ_ID = B.READ_OBJ_ID
	INNER JOIN EMS_TAG_READ_RAW_DATA A  ON A.COM_ID = B.COM_ID AND A.TAG_ID = B.TAG_ID 
				AND A.READ_DTTM BETWEEN CURDATE() AND NOW()
	LEFT  JOIN COMM_CD CC ON CC.COMM_GRP_CD = 'CM_UNIT' AND CC.COMM_CD =B.UNIT_CD
    WHERE R.COM_ID = #{session.comId} /*파라미터*/
    	AND R.BLOC_ID = #{session.blocId} /*파라미터*/
		AND R.READ_OBJ_ID = 'ROI000001'
		AND R.MNTR_FG = '1' /* 모니터링여부 */
		AND I.READ_OBJ_CD IN ('VOLT_AVG','AMP_AVG','PF','ACTV_PWR','HZ')
 )T
GROUP BY COM_ID, READ_PLC_ID, READ_PLC_NM, READ_DT, READ_TM
ORDER BY READ_PLC_ID, READ_TM   

	/*주요 검침현황*/
	SELECT 
		@ROWNUM:=@ROWNUM+1 as ROW_NUM
		,T2.*, 
  			<![CDATA[
			CASE	WHEN T2.VOLT >= 0 AND T2.AMPR = 0 AND T2.INSTANT_VAL = 0 THEN '미사용'
					WHEN T2.VOLT > 0 AND T2.AMPR > 0 AND T2.INSTANT_VAL > 0 THEN '가동중'
					WHEN T2.VOLT <0 OR T2.AMPR<0 OR T2.INSTANT_VAL < 0 THEN '비정상'
					ELSE '비정상' END AS STAT
 			]]>
	FROM 
	(			
		SELECT A.COM_ID
			, T.READ_PLC_ID
			, R.READ_PLC_NM
			, A.READ_DTTM AS READ_DTTM
			, DATE_FORMAT(A.READ_DTTM,'%Y%m%d') as READ_DT
			, DATE_FORMAT(A.READ_DTTM,'%H%i') as READ_TM
			, MAX(CASE WHEN I.READ_OBJ_CD = 'ACTV_PWR' THEN A.READ_VAL  END)  AS INSTANT_VAL
			, MAX(CASE WHEN I.READ_OBJ_CD IN ('VOLT_R', 'VOLT_AVG')  THEN A.READ_VAL  END) VOLT
			, MAX(CASE WHEN I.READ_OBJ_CD IN ('AMP_R', 'AMP_AVG')  THEN A.READ_VAL  END) AMPR
			, MAX(CASE WHEN I.READ_OBJ_CD = 'HZ'  THEN A.READ_VAL  END) HZ
		FROM EMS_READ_PLC_INFO R
		INNER JOIN EMS_READ_PLC_TAG_REL T	ON R.COM_ID = T.COM_ID AND R.READ_PLC_ID =T.READ_PLC_ID
		INNER JOIN EMS_TAG_BASE_INFO B      ON T.COM_ID = B.COM_ID AND T.TAG_ID = B.TAG_ID
		INNER JOIN EMS_READ_OBJ_INFO I 		ON I.COM_ID = B.COM_ID AND I.READ_OBJ_ID = B.READ_OBJ_ID
		INNER JOIN EMS_TAG_READ_RAW_DATA A  ON A.COM_ID = B.COM_ID AND A.TAG_ID = B.TAG_ID 
					AND date_format(A.READ_DTTM, '%Y%m%d%H%i') = CONCAT(DATE_FORMAT(NOW(), '%Y%m%d'), LPAD(HOUR(NOW()), 2, '0'), LPAD(MINUTE(NOW())-MINUTE(NOW())%15, 2, '0'))
		LEFT  JOIN COMM_CD CC ON CC.COMM_GRP_CD = 'CM_UNIT' AND CC.COMM_CD =B.UNIT_CD
		WHERE R.COM_ID = #{session.comId} /*파라미터*/
			AND R.BLOC_ID = #{session.blocId} /*파라미터*/
			AND R.MNTR_FG = '1' /* 모니터링여부 */
			AND I.READ_OBJ_CD IN ('VOLT_AVG','AMP_AVG','ACTV_PWR','VOLT_R','AMP_R', 'HZ')
		GROUP BY 	A.COM_ID	, T.READ_PLC_ID	, R.READ_PLC_NM	, A.READ_DTTM
	)T2, (SELECT @ROWNUM:=0) TMP
	ORDER BY READ_PLC_ID

	
/*NEW FEMS 대시보드 로그리스트 */
SELECT 
	DATE_FORMAT(H.OCCR_DTTM,'%Y%m%d') as READ_DT,
	DATE_FORMAT(H.OCCR_DTTM,'%H:%i:%s') as READ_TM,
	IFNULL(H.EVT_MSG,'') as 'DESC'
FROM EMS_EVT_MSTR M
INNER JOIN EMS_EVT_HIST H ON M.COM_ID = H.COM_ID	AND M.SYS_KIND=H.SYS_KIND	AND M.EVT1_KIND=H.EVT1_KIND	AND M.EVT2_KIND=H.EVT2_KIND	AND M.DTCT_KIND=H.DTCT_KIND
WHERE M.COM_ID = #{session.comId} /*파라미터*/
   AND M.BLOC_ID =#{session.blocId} /*파라미터*/
   AND M.SYS_KIND = 'FEMS' /*시스템 코드*/ 
   AND M.DTCT_KIND = 'FEMS'/*감지 시스템 */
   AND M.EVT1_KIND ='FEMS_LOG'
   AND H.OCCR_DTTM BETWEEN  CURDATE()  AND NOW()
ORDER BY OCCR_DTTM DESC